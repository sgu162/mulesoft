<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="dbd7619e-f626-4f30-9c10-09c62ab45569" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<flow name="MapOperation" doc:id="d0955a93-6c69-428f-ae0c-78ffe9b6b235" >
		<http:listener doc:name="Listener" doc:id="052a7db1-c3ff-4ad4-8809-7b9b311ff515" path="/testMapTransformation" config-ref="HTTP_Listener_config"/>
		<ee:transform doc:name="Transform Message" doc:id="599f417f-f4e2-4b9d-a833-b03fa38b5e56" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
cars : payload.cars map (object,index) -> {
	'cars$(index)':object
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="MapObjectFlattenJoinByOperations" doc:id="a95ac385-46f6-4703-8c88-25d557147836" >
		<http:listener doc:name="Listener" doc:id="599d5e79-871d-4c79-8416-8cb82bddb51c" config-ref="HTTP_Listener_config" path="/testCars"/>
		<ee:transform doc:name="Transform Message" doc:id="96732287-7cdf-40e4-92e6-50a2abd43b14" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload mapObject ((value, key, index) -> {
		newobject :{
		names: value.name,
		models:flatten(value.models) joinBy  ' AND '
		} 	
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="DateFunctionsVariableDef" doc:id="80f6121b-0271-49b4-b232-2390b66cb324" >
		<http:listener doc:name="Listener" doc:id="f9c228f4-1683-4438-8ae9-a0ebf85c0f40" config-ref="HTTP_Listener_config" path="/dateTransformations"/>
		<ee:transform doc:name="Transform Message" doc:id="04bf612f-cc15-4480-83d3-7edcc8143ab3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/dw
var date='2019-12-12'
var localDateTime="2019-12-12 11:22:33"
---
{
	'DATE':date as Date { format : "yyyy-MM-dd"},
	"localDateTime" : localDateTime as LocalDateTime {format : "yyyy-MM-dd HH:mm:ss"},
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="CustomFunctionTransformToXmlStringFn" doc:id="b762ad77-3116-4aff-b752-5540113264cf" >
		<http:listener doc:name="Listener" doc:id="e7d0ff4f-444c-4ac5-ad04-f697eda32d10" config-ref="HTTP_Listener_config" path="/employeeData"/>
		<ee:transform doc:name="Transform Message" doc:id="8e9395b0-04f0-48c0-b69f-0a5cd733e3c3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
import * from dw::core::Strings

fun namecheck(name : String)=
	if(name contains('SHYAM'))
		'GYAN'
	else
		name
---
employees: {(payload.employees map (item, index) ->{
	name:namecheck(upper(item.name)),
	email:item.email,
	designation:camelize(item.designation)
	}
	)}
	]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
